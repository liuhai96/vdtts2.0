<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsjbc.vdtts.dao.mapper.ExamResultMapper">
<!--    刘海-->
    <select id="selectStudentExamCount" parameterType="int" resultType="int">
        select count(*) from tb_student stu INNER JOIN tb_exam_result er on stu.s_id = er.er_student_id inner join tb_teacher ter on stu.s_teacher_id = ter.t_id
        <where>
            <if test="sName!=null and sName!=''">
                and stu.s_name like concat('%',#{sName},'%')
            </if>
            and stu.s_school_id = #{sSchoolId}
        </where>

    </select>
    <select id="selectStudentExamList" parameterType="int" resultMap="studentMap">
        select stu.s_id,stu.s_name,stu.s_sex,stu.s_phone,stu.s_teacher_id,er.*,ter.t_name from tb_student stu INNER JOIN tb_exam_result er on stu.s_id = er.er_student_id inner join tb_teacher ter on stu.s_teacher_id = ter.t_id
        <where>
            <if test="sName!=null and sName!=''">
                and stu.s_name like concat('%',#{sName},'%')
            </if>
            and stu.s_school_id = #{sSchoolId} limit ${start},#{pageSize}
        </where>

    </select>
    <resultMap id="studentMap" type="com.lsjbc.vdtts.entity.ExamResult">
        <result property="erStudentId" column="er_student_id"></result>
        <result property="student.sId" column="s_id"></result>
        <result property="student.sName" column="s_name"></result>
        <result property="student.sPhone" column="s_phone"></result>
        <result property="student.sSex" column="s_sex"></result>
        <result property="student.sTeacherId" column="s_teacher_id"></result>
    </resultMap>

    <select id="findSubjectExamState" parameterType="int" resultType="com.lsjbc.vdtts.entity.ExamResult">
        select * from tb_exam_result where er_id = #{erId} and er_student_id = #{erStudentId}
    </select>

    <select id="findSubjectExamCount" parameterType="int" resultType="int">
        select count(re.er_id) FROM tb_exam_result re INNER JOIN tb_student stu on re.er_student_id = stu.s_id INNER JOIN tb_teacher ter on stu.s_teacher_id
        = ter.t_id
        <where>
            <if test="examSujectId==1">
               and ter.t_id = #{tId} and re.er_state1 = 2
            </if>
            <if test="examSujectId==2">
                and ter.t_id = #{tId} and re.er_state2 = 2
            </if>
            <if test="examSujectId==3">
                and ter.t_id = #{tId} and re.er_state3 = 2
            </if>
            <if test="examSujectId==4">
                and  ter.t_id = #{tId} and re.er_state4 = 2
            </if>
        </where>
    </select>

    <update id="updateStudentExanState" parameterType="int">
        update tb_exam_result
        <set>
            <if test="examSujectId==1">
                er_state1=#{erState},
            </if>
            <if test="examSujectId==2">
                er_state2=#{erState},
            </if>
            <if test="examSujectId==3">
                er_state3=#{erState},
            </if>
            <if test="examSujectId==4">
                er_state4=#{erState},
            </if>
        </set>
        where er_id = #{erId}
    </update>

    <update id="updateStudentScore" parameterType="int">
        update tb_exam_result
        <set>
            <if test="examSujectId==1">
                er_score1=#{erScore},
            </if>
            <if test="examSujectId==2">
                er_score2=#{erScore},
            </if>
            <if test="examSujectId==3">
                er_score3=#{erScore},
            </if>
            <if test="examSujectId==4">
                er_score4=#{erScore},
            </if>
        </set>
        where er_id = #{erId}
    </update>

    <insert id="insertStudent" parameterType="int">
        insert into tb_exam_result(er_student_id) values (#{erStudentId})
    </insert>
    <select id="getRecord" resultType="com.lsjbc.vdtts.entity.ExamResult">
        select * from tb_exam_result
        <where> 1=1
            <if test="erStudentId != null and erStudentId != ''"> and er_student_id = #{erStudentId}</if>
            <if test="erId != null and erId != ''"> and er_id = #{erId}</if>
        </where>
    </select>
</mapper>